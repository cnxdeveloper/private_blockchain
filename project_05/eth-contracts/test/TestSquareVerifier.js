// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('SquareVerifier');

contract('SquareVerifier', accounts => {
    const account_one = accounts[0];
    // - use the contents from proof.json generated from zokrates steps
    const proof = require("./proof.json");

    beforeEach(async function () {
        this.contract = await SquareVerifier.new({ from: account_one });
    })

    // Test verification with correct proof
    it('test verification with correct proof', async function () {

        const { proof: { a, b, c }, inputs: input } = proof;

        let result = await this.contract.verifyTx.call(a,b,c,input);
        assert.equal(result,true, "test verification with correct proof.");

    })

    // Test verification with incorrect proof
    it('test verification with incorrect proof', async function () {

        const { proof: { a, b, c } } = proof;

        let result = await this.contract.verifyTx.call(a,b,c,[0,0]);
        assert.equal(result,false,"test verification with incorrect proof.");

    })


})